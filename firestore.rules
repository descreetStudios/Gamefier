rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Function to check if the user is admin
    function isAdmin() {
      return request.auth != null &&
        request.auth.token.role == "admin";
    }

    // Function to check if the user is banned
    function isBanned() {
      return request.auth != null &&
        request.auth.token.role == "banned";
    }

    // USERS
    match /users/{userId} {
      // Banned users can only read their own data
      allow read: if request.auth != null &&
        (request.auth.uid == userId || isAdmin());

      // Create only allowed if document ID matches UID
      allow create: if request.auth != null &&
        request.auth.uid == userId;

      allow update: if request.auth != null && (
        (isAdmin() &&
          !request.resource.data.diff(resource.data).changedKeys().hasAny(['role'])
        ) ||
        (
          request.auth.uid == userId &&
          !request.resource.data.diff(resource.data).changedKeys().hasAny(['role']) &&

          (
            isBanned()
              ? request.resource.data.diff(resource.data).changedKeys().hasOnly([
                  'banAppealText',
                  'banAppealPending'
                ])
              : (
                request.resource.data.diff(resource.data).changedKeys().hasOnly([
                  'email',
                  'displayName',
                  'displayNameLowerCase',
                  'profileIconUrl',
                  'banAppealText'
                ])
              )
          )
        )
      );

      allow delete: if false;
    }

    // QUIZZES
    match /quizzes/{quizId} {
      // Any authenticated and non-banned user can read all quizzes
      allow read: if request.auth != null && !isBanned();

      // Only the authenticated and non-banned author can create a quiz
      allow create: if request.auth != null &&
        !isBanned() &&
        request.resource.data.uid == request.auth.uid;

      // Only the authenticated and non-banned author can update or delete
      allow update, delete: if request.auth != null &&
        !isBanned() &&
        resource.data.uid == request.auth.uid;
    }

    // SITE SETTINGS
    match /site_settings/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
